######## [日志优先级] #######

# DEBUG 一般用于细粒度级别上，对调试应用程序非常有帮助。
# INFO 一般和在粗粒度级别上，强调应用程序的运行全程。 
# WARN 表明会出现潜在的错误情形。  
# ERROR 指出虽然发生错误事件，但仍然不影响系统的继续运行。 

# 日志级别是有顺序的，DEBUG < INFO < WARN < ERROR，分别用来指定这条日志信息的重要程度，明白这一点很重要，
# Log4j有一个规则：只输出级别不低于设定级别的日志信息，假设Loggers级别设定为INFO，则INFO、WARN、ERROR级别的日志信息都会输出，而级别比INFO低的DEBUG则不会输出。 

######## [日志输出目的地] #######
# org.apache.log4j.ConsoleAppender（控制台） 
# org.apache.log4j.FileAppender（文件） 
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件） 
# org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件） 
# org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方） 

#########  [日志格式]  ##########
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
# %r 输出自应用启动到输出该log信息耗费的毫秒数
# %c 输出所属的类目，通常就是所在类的全名
# %t 输出产生该日志事件的线程名
# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
# %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
# %m 输出信息

#########
# 其中log4j.appender.D.Threshold是一个过滤器，配置了表示输出该级别及其以上的日志， 
# 另外log4j.appender.D.Append = true一般输出到文件的都会配置，而且配置成true，true：表示添加，false：表示覆盖。
#==================================================================================


# 设置 【日志输出级别】
log4j.rootLogger=DEBUG,C,F1,E1

# 设置输出源
log4j.appender.C=org.apache.log4j.ConsoleAppender
log4j.appender.C.layout=org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern=[%p] :  %m%n

# 设置输出到文件的输出源
log4j.appender.F1 = org.apache.log4j.DailyRollingFileAppender
log4j.appender.F1.File = debug.log
log4j.appender.F1.layout = org.apache.log4j.PatternLayout
log4j.appender.F1.Threshold = DEBUG
log4j.appender.F1.Append = true
log4j.appender.F1.layout.ConversionPattern=[%p] %d{yyyy-MM-dd: HH:mm:ss} %l :  %m%n

# 设置输出到文件的输出源
log4j.appender.E1 = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E1.File = error.log
log4j.appender.E1.layout = org.apache.log4j.PatternLayout
log4j.appender.E1.Threshold = ERROR
log4j.appender.E1.Append = true
log4j.appender.E1.layout.ConversionPattern=[%p] %d{yyyy-MM-dd: HH:mm:ss} %l :  %m%n

#去掉struts框架DEBUG调式信息
log4j.logger.com.opensymphony.xwork2=ERROR
log4j.logger.freemarker.cache=ERROR
log4j.logger.freemarker.beans=ERROR
log4j.logger.org.apache.struts2=ERROR